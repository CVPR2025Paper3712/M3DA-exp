from m3da_exp.torch.module.gan import ResnetGenerator


use_cyclegan3d = True
generator3d = ResnetGenerator(1, 1)
saved_generator_path = 'generator.pth'


def adapt_generator3d_param_names(current_state, state_to_load):
    return {k[len("module."):]: v for k, v in state_to_load.items()}


run_experiment = run(
    fix_seed(seed=RANDOM_STATE),
    lock_dir(),
    architecture.to(device),
    generator3d.to(device),
    load_model_state(architecture, saved_model_path),
    load_model_state(generator3d, saved_generator_path, modify_state_fn=adapt_generator3d_param_names),
    if_missing(predict_to_dir, output_path=test_predictions_path),
    if_missing(evaluate_individual_metrics, results_path=test_metrics_path),
    if_missing(embed_to_dir, results_path=test_embed_path),
)
