from ...assets.core import *
from ...assets.utils.uda_layout import *
from ...assets.utils.dann_emb import *
from ...assets.dataset.amos import *
from ...assets.batch_iter.ps3d_uda import *
from ...assets.architecture.dann.amos import *
from ...assets.metric.mcls_segm import *

from m3da_exp.const import AMOS_MRI_SPACING


# apply_nnunet_augm = True
apply_d48 = False
val_size = 0

# ### MRI -> CT ###
split = [[ids_mri_l, ids_ct_u, [], ids_ct_1[:val_size], ids_mri_l, ids_ct_1]]
new_spacing = AMOS_MRI_SPACING

# ### CT -> MRI ###
# split = [[ids_ct_0, ids_mri_u, [], ids_mri_l[:val_size], ids_ct_1, ids_mri_l]]

# ### CT -> LDCT ###
# split = [[ids_ct_0, ids_ct_u, [], ids_ct_1[:val_size], [], ids_ct_1]]
# noise_mode = "ldct"
# noise_folds = ('ct|l|1', 'ct|u|None', )

# ### Soft -> Sharp ###
# split = [[ids_ct_0, ids_ct_u, [], ids_ct_1[:val_size], [], ids_ct_1]]
# soft_folds = ('ct|l|0', )
# sharp_folds = ('ct|u|None', 'ct|l|1', )

# ### Sharp -> Soft (baseline) ###
# split = [[ids_ct_0, ids_ct_u, [], ids_ct_1[:val_size], [], ids_ct_1]]
# sharp_folds = ('ct|l|0', )
# soft_folds = ('ct|u|None', 'ct|l|1', )

cache_size = len(split[0][0]) + len(split[0][1]) + val_size
